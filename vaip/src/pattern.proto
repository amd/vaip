/*
 *  Copyright (C) 2023 â€“ 2024 Advanced Micro Devices, Inc. All rights reserved.
 *  Licensed under the MIT License.
 */
syntax = "proto3";
package vaip_core;

message RootPatternProto {
  repeated PatternProto patterns = 1;
}

message PatternProto {
  int32 id = 1;
  bool is_root = 2;
  oneof type {
    PatternWildcardProto wildcard = 10;
    PatternGraphInputProto graph_input = 11;
    PatternConstantProto constant = 12;
    PatternCallNodeProto call_node = 13;
    PatternCommutableCallProto commutable_node = 14;
  }
  map<string, int32> name_to_id = 15;
}

message PatternWildcardProto {
}

message PatternGraphInputProto {
}

message PatternConstantProto {
}

message PatternCallNodeProto {
  string op_type = 1;
  repeated PatternCallNodeArgProto args = 2;
  repeated bool optional_args = 3;
}

message PatternCallNodeArgProto {
  oneof arg {
    int32 id = 1;
    PatternProto pattern  = 2;
  }
}
message  PatternCommutableCallProto {
  string op_type = 1;
  PatternCallNodeArgProto arg1 = 2;
  PatternCallNodeArgProto arg2 = 3;
}
