/*
 *  Copyright (C) 2023 â€“ 2024 Advanced Micro Devices, Inc. All rights reserved.
 *  Licensed under the MIT License.
 */
#include <filesystem>
#include <fstream>
#include <glog/logging.h>
#include <gtest/gtest.h>
#include <mutex>
#include <string>
// clang-format off
#define CMAKE_CURRENT_BINARY_PATH std::filesystem::path(std::string("@CMAKE_CURRENT_BINARY_DIR@"))
#define MY_LOG() logger() << __FILE__ << ":" << __LINE__ << " "
// clang-format on
class DebugLogger : public ::testing::Test {
public:
  DebugLogger() {}
  void open_logger_file(const std::string& name) {
    auto dir = std::filesystem::path(CMAKE_CURRENT_BINARY_PATH);
    stream = std::make_unique<std::ofstream>(dir / name);
  }

  ~DebugLogger() {
    if (stream) {
      stream->close();
      stream = nullptr;
    }
  }
  std::ostream& logger() { return *stream; }

protected:
  void SetUp() override {}
  void TearDown() override { //
  }

private:
  std::unique_ptr<std::ofstream> stream;
};
