//
//  Copyright (C) 2023 â€“ 2024 Advanced Micro Devices, Inc. All rights reserved.
//  Licensed under the MIT License.
//

/** generated by the following command:
env \
 IGNORE_CONSTANT=1 \
 ENABLE_CONSTNAT_SHARING=0 \
 $BUILD/vaip/onnxruntime_vitisai_ep/onnx_pattern_gen \
 -i inp_cache_k \
 -o /Unsqueeze_26_output_0 \
 -f C:\temp\zhonnian\vaip\.cache\97bcaa432a2c634a707dfc23bf222032\cloned_graph.onnx\
 -c onnx_grep_cxx_pattern.h.inc
*/
auto input_0 = builder.wildcard(); //  id = 0  node_arg_name = inp_cache_k
builder.bind("inp_cache_k",input_0);
auto constant_0 = builder.constant(); //  id = 1  node_arg_name = /Concat_output_0
builder.bind("/Concat_output_0",constant_0);
auto Reshape_0 = builder.node2("Reshape",{input_0,constant_0}); //  id = 2  node_arg_name = /Reshape_output_0
builder.bind("/Reshape_output_0",Reshape_0);
auto constant_1 = builder.constant(); //  id = 3  node_arg_name = /Constant_1_output_0
builder.bind("/Constant_1_output_0",constant_1);
auto Gather_0 = builder.node2("Gather",{Reshape_0,constant_1}); //  id = 4  node_arg_name = /Gather_output_0_pre_q
builder.bind("/Gather_output_0_pre_q",Gather_0);
auto constant_2 = builder.constant(); //  id = 5  node_arg_name = /linear_k/Add_output_0_scale
builder.bind("/linear_k/Add_output_0_scale",constant_2);
auto constant_3 = builder.constant(); //  id = 6  node_arg_name = /Unsqueeze_26_output_0_zero_point
builder.bind("/Unsqueeze_26_output_0_zero_point",constant_3);
auto com_microsoft_QuantizeLinear_0 = builder.node2("com.microsoft:QuantizeLinear",{Gather_0,constant_2,constant_3}); //  id = 7  node_arg_name = /Gather_output_0_q_to_dq
builder.bind("/Gather_output_0_q_to_dq",com_microsoft_QuantizeLinear_0);
auto constant_4 = builder.constant(); //  id = 8  node_arg_name = /linear_k/Add_output_0_scale
builder.bind("/linear_k/Add_output_0_scale",constant_4);
auto constant_5 = builder.constant(); //  id = 9  node_arg_name = /Unsqueeze_26_output_0_zero_point
builder.bind("/Unsqueeze_26_output_0_zero_point",constant_5);
auto com_microsoft_DequantizeLinear_0 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_0,constant_4,constant_5}); //  id = 10  node_arg_name = /Gather_output_0_post_dq
builder.bind("/Gather_output_0_post_dq",com_microsoft_DequantizeLinear_0);
auto constant_6 = builder.constant(); //  id = 11  node_arg_name = /Constant_21_output_0
builder.bind("/Constant_21_output_0",constant_6);
auto Unsqueeze_0 = builder.node2("Unsqueeze",{com_microsoft_DequantizeLinear_0,constant_6}); //  id = 12  node_arg_name = /Unsqueeze_26_output_0
builder.bind("/Unsqueeze_26_output_0",Unsqueeze_0);
ret = Unsqueeze_0;
