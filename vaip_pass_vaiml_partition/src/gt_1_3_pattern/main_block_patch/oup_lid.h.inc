//
//  Copyright (C) 2023 â€“ 2024 Advanced Micro Devices, Inc. All rights reserved.
//  Licensed under the MIT License.
//

/** generated by the following command:
env \
 IGNORE_CONSTANT=1 \
 ENABLE_CONSTNAT_SHARING=0 \
 $BUILD/vaip/onnxruntime_vitisai_ep/onnx_pattern_gen \
 -i /Add_73_output_0_DequantizeLinear_Output/duplicated \
 -i /feed_forward/w_2_14/Add_output_0_DequantizeLinear_Output \
 -o oup_lid_QuantizeLinear_Output \
 -f C:\temp\zhonnian\vaip\.cache\97bcaa432a2c634a707dfc23bf222032\cloned_graph.onnx\
 -c onnx_grep_cxx_pattern.h.inc
*/
auto input_0 = builder.wildcard(); //  id = 0  node_arg_name = /Add_73_output_0_DequantizeLinear_Output/duplicated
builder.bind("/Add_73_output_0_DequantizeLinear_Output/duplicated",input_0);
auto input_1 = builder.wildcard(); //  id = 1  node_arg_name = /feed_forward/w_2_14/Add_output_0_DequantizeLinear_Output
builder.bind("/feed_forward/w_2_14/Add_output_0_DequantizeLinear_Output",input_1);
auto Add_0 = builder.node2("Add",{input_0,input_1}); //  id = 2  node_arg_name = /Add_74_output_0
builder.bind("/Add_74_output_0",Add_0);
auto constant_0 = builder.constant(); //  id = 3  node_arg_name = /Add_74_output_0_scale
builder.bind("/Add_74_output_0_scale",constant_0);
auto constant_1 = builder.constant(); //  id = 4  node_arg_name = /Add_74_output_0_zero_point
builder.bind("/Add_74_output_0_zero_point",constant_1);
auto com_microsoft_QuantizeLinear_0 = builder.node2("com.microsoft:QuantizeLinear",{Add_0,constant_0,constant_1}); //  id = 5  node_arg_name = /Add_74_output_0_QuantizeLinear_Output
builder.bind("/Add_74_output_0_QuantizeLinear_Output",com_microsoft_QuantizeLinear_0);
auto constant_2 = builder.constant(); //  id = 6  node_arg_name = /Add_74_output_0_scale
builder.bind("/Add_74_output_0_scale",constant_2);
auto constant_3 = builder.constant(); //  id = 7  node_arg_name = /Add_74_output_0_zero_point
builder.bind("/Add_74_output_0_zero_point",constant_3);
auto com_microsoft_DequantizeLinear_0 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_0,constant_2,constant_3}); //  id = 8  node_arg_name = /Add_74_output_0_DequantizeLinear_Output
builder.bind("/Add_74_output_0_DequantizeLinear_Output",com_microsoft_DequantizeLinear_0);
auto constant_4 = builder.constant(); //  id = 9  node_arg_name = /Constant_21_output_0
builder.bind("/Constant_21_output_0",constant_4);
auto Squeeze_0 = builder.node2("Squeeze",{com_microsoft_DequantizeLinear_0,constant_4}); //  id = 10  node_arg_name = oup_lid_QuantizeLinear_Input
builder.bind("oup_lid_QuantizeLinear_Input",Squeeze_0);
auto constant_5 = builder.constant(); //  id = 11  node_arg_name = /Add_74_output_0_scale
builder.bind("/Add_74_output_0_scale",constant_5);
auto constant_6 = builder.constant(); //  id = 12  node_arg_name = /Add_74_output_0_zero_point
builder.bind("/Add_74_output_0_zero_point",constant_6);
auto com_microsoft_QuantizeLinear_1 = builder.node2("com.microsoft:QuantizeLinear",{Squeeze_0,constant_5,constant_6}); //  id = 13  node_arg_name = oup_lid_QuantizeLinear_Output
builder.bind("oup_lid_QuantizeLinear_Output",com_microsoft_QuantizeLinear_1);
ret = com_microsoft_QuantizeLinear_1;
