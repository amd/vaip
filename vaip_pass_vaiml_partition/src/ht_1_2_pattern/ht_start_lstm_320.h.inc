//  Copyright (C) 2023 â€“ 2024 Advanced Micro Devices, Inc. All rights reserved.
//  Licensed under the MIT License.
/** generated by the following command:
env \
 IGNORE_CONSTANT=1 \
 ENABLE_CONSTNAT_SHARING=0 \
 $BUILD/vaip/onnxruntime_vitisai_ep/onnx_pattern_gen \
 -i /decoder_embedding/embed/Gather_output_0_QuantizeLinear_Output \
 -i /decoder/rnn/Slice_13_output_0_QuantizeLinear_Output \
 -i /decoder/rnn/Slice_12_output_0_QuantizeLinear_Output \
 -o /decoder/rnn/Squeeze_output_0 \
 -f C:\temp\zhonnian\vaip\.cache\6809517bbd0a7b44acc31942d410ca3a\cloned_graph.onnx\
 -c onnx_grep_cxx_pattern.h.inc
*/
auto input_0 = builder.wildcard(); //  id = 0  node_arg_name = /decoder_embedding/embed/Gather_output_0_QuantizeLinear_Output
builder.bind("/decoder_embedding/embed/Gather_output_0_QuantizeLinear_Output",input_0);
auto constant_0 = builder.constant(); //  id = 1  node_arg_name = decoder_embedding.embed.weight_scale
builder.bind("decoder_embedding.embed.weight_scale",constant_0);
auto constant_1 = builder.constant(); //  id = 2  node_arg_name = decoder_embedding.embed.weight_zero_point
builder.bind("decoder_embedding.embed.weight_zero_point",constant_1);
auto DequantizeLinear_0 = builder.node2("DequantizeLinear",{input_0,constant_0,constant_1}); //  id = 3  node_arg_name = /decoder_embedding/embed/Gather_output_0_DequantizeLinear_Output
builder.bind("/decoder_embedding/embed/Gather_output_0_DequantizeLinear_Output",DequantizeLinear_0);
auto constant_2 = builder.constant(); //  id = 4  node_arg_name = decoder_embedding.embed_lnorm.weight_quantized
builder.bind("decoder_embedding.embed_lnorm.weight_quantized",constant_2);
auto constant_3 = builder.constant(); //  id = 5  node_arg_name = decoder_embedding.embed_lnorm.weight_scale
builder.bind("decoder_embedding.embed_lnorm.weight_scale",constant_3);
auto constant_4 = builder.constant(); //  id = 6  node_arg_name = decoder_embedding.embed_lnorm.weight_zero_point
builder.bind("decoder_embedding.embed_lnorm.weight_zero_point",constant_4);
auto DequantizeLinear_1 = builder.node2("DequantizeLinear",{constant_2,constant_3,constant_4}); //  id = 7  node_arg_name = decoder_embedding.embed_lnorm.weight_DequantizeLinear_Output
builder.bind("decoder_embedding.embed_lnorm.weight_DequantizeLinear_Output",DequantizeLinear_1);
auto constant_5 = builder.constant(); //  id = 8  node_arg_name = decoder_embedding.embed_lnorm.bias_quantized
builder.bind("decoder_embedding.embed_lnorm.bias_quantized",constant_5);
auto constant_6 = builder.constant(); //  id = 9  node_arg_name = decoder_embedding.embed_lnorm.bias_quantized_scale
builder.bind("decoder_embedding.embed_lnorm.bias_quantized_scale",constant_6);
auto constant_7 = builder.constant(); //  id = 10  node_arg_name = decoder.lnorm_layer.bias_quantized_zero_point
builder.bind("decoder.lnorm_layer.bias_quantized_zero_point",constant_7);
auto DequantizeLinear_2 = builder.node2("DequantizeLinear",{constant_5,constant_6,constant_7}); //  id = 11  node_arg_name = decoder_embedding.embed_lnorm.bias
builder.bind("decoder_embedding.embed_lnorm.bias",DequantizeLinear_2);
auto LayerNormalization_0 = builder.node2("LayerNormalization",{DequantizeLinear_0,DequantizeLinear_1,DequantizeLinear_2}); //  id = 12  node_arg_name = /decoder_embedding/embed_lnorm/Add_1_output_0
builder.bind("/decoder_embedding/embed_lnorm/Add_1_output_0",LayerNormalization_0);
auto constant_8 = builder.constant(); //  id = 13  node_arg_name = /decoder_embedding/embed_lnorm/Add_1_output_0_scale
builder.bind("/decoder_embedding/embed_lnorm/Add_1_output_0_scale",constant_8);
auto constant_9 = builder.constant(); //  id = 14  node_arg_name = /decoder_embedding/embed_lnorm/Add_1_output_0_zero_point
builder.bind("/decoder_embedding/embed_lnorm/Add_1_output_0_zero_point",constant_9);
auto QuantizeLinear_0 = builder.node2("QuantizeLinear",{LayerNormalization_0,constant_8,constant_9}); //  id = 15  node_arg_name = /decoder_embedding/embed_lnorm/Add_1_output_0_QuantizeLinear_Output
builder.bind("/decoder_embedding/embed_lnorm/Add_1_output_0_QuantizeLinear_Output",QuantizeLinear_0);
auto constant_10 = builder.constant(); //  id = 16  node_arg_name = /decoder_embedding/embed_lnorm/Add_1_output_0_scale
builder.bind("/decoder_embedding/embed_lnorm/Add_1_output_0_scale",constant_10);
auto constant_11 = builder.constant(); //  id = 17  node_arg_name = /decoder_embedding/embed_lnorm/Add_1_output_0_zero_point
builder.bind("/decoder_embedding/embed_lnorm/Add_1_output_0_zero_point",constant_11);
auto DequantizeLinear_3 = builder.node2("DequantizeLinear",{QuantizeLinear_0,constant_10,constant_11}); //  id = 18  node_arg_name = /decoder_embedding/embed_lnorm/Add_1_output_0_DequantizeLinear_Output
builder.bind("/decoder_embedding/embed_lnorm/Add_1_output_0_DequantizeLinear_Output",DequantizeLinear_3);
auto Sigmoid_0 = builder.node2("Sigmoid",{DequantizeLinear_3}); //  id = 19  node_arg_name = /decoder_embedding/sigmoid/Sigmoid_output_0
builder.bind("/decoder_embedding/sigmoid/Sigmoid_output_0",Sigmoid_0);
auto constant_12 = builder.constant(); //  id = 20  node_arg_name = /decoder_embedding/sigmoid/Sigmoid_output_0_scale
builder.bind("/decoder_embedding/sigmoid/Sigmoid_output_0_scale",constant_12);
auto constant_13 = builder.constant(); //  id = 21  node_arg_name = /decoder_embedding/sigmoid/Sigmoid_output_0_zero_point
builder.bind("/decoder_embedding/sigmoid/Sigmoid_output_0_zero_point",constant_13);
auto QuantizeLinear_1 = builder.node2("QuantizeLinear",{Sigmoid_0,constant_12,constant_13}); //  id = 22  node_arg_name = /decoder_embedding/sigmoid/Sigmoid_output_0_QuantizeLinear_Output
builder.bind("/decoder_embedding/sigmoid/Sigmoid_output_0_QuantizeLinear_Output",QuantizeLinear_1);
auto constant_14 = builder.constant(); //  id = 23  node_arg_name = /decoder_embedding/sigmoid/Sigmoid_output_0_scale
builder.bind("/decoder_embedding/sigmoid/Sigmoid_output_0_scale",constant_14);
auto constant_15 = builder.constant(); //  id = 24  node_arg_name = /decoder_embedding/sigmoid/Sigmoid_output_0_zero_point
builder.bind("/decoder_embedding/sigmoid/Sigmoid_output_0_zero_point",constant_15);
auto DequantizeLinear_4 = builder.node2("DequantizeLinear",{QuantizeLinear_1,constant_14,constant_15}); //  id = 25  node_arg_name = /decoder_embedding/sigmoid/Sigmoid_output_0_DequantizeLinear_Output
builder.bind("/decoder_embedding/sigmoid/Sigmoid_output_0_DequantizeLinear_Output",DequantizeLinear_4);
auto Transpose_0 = builder.node2("Transpose",{DequantizeLinear_4}); //  id = 26  node_arg_name = /decoder/rnn/Transpose_output_0
builder.bind("/decoder/rnn/Transpose_output_0",Transpose_0);
auto constant_16 = builder.constant(); //  id = 27  node_arg_name = /decoder_embedding/sigmoid/Sigmoid_output_0_scale
builder.bind("/decoder_embedding/sigmoid/Sigmoid_output_0_scale",constant_16);
auto constant_17 = builder.constant(); //  id = 28  node_arg_name = /decoder_embedding/sigmoid/Sigmoid_output_0_zero_point
builder.bind("/decoder_embedding/sigmoid/Sigmoid_output_0_zero_point",constant_17);
auto QuantizeLinear_2 = builder.node2("QuantizeLinear",{Transpose_0,constant_16,constant_17}); //  id = 29  node_arg_name = /decoder/rnn/Transpose_output_0_QuantizeLinear_Output
builder.bind("/decoder/rnn/Transpose_output_0_QuantizeLinear_Output",QuantizeLinear_2);
auto constant_18 = builder.constant(); //  id = 30  node_arg_name = /decoder_embedding/sigmoid/Sigmoid_output_0_scale
builder.bind("/decoder_embedding/sigmoid/Sigmoid_output_0_scale",constant_18);
auto constant_19 = builder.constant(); //  id = 31  node_arg_name = /decoder_embedding/sigmoid/Sigmoid_output_0_zero_point
builder.bind("/decoder_embedding/sigmoid/Sigmoid_output_0_zero_point",constant_19);
auto DequantizeLinear_5 = builder.node2("DequantizeLinear",{QuantizeLinear_2,constant_18,constant_19}); //  id = 32  node_arg_name = /decoder/rnn/Transpose_output_0_DequantizeLinear_Output
builder.bind("/decoder/rnn/Transpose_output_0_DequantizeLinear_Output",DequantizeLinear_5);
auto input_1 = builder.wildcard(); //  id = 33  node_arg_name = /decoder/rnn/Slice_12_output_0_QuantizeLinear_Output
builder.bind("/decoder/rnn/Slice_12_output_0_QuantizeLinear_Output",input_1);
auto constant_20 = builder.constant(); //  id = 34  node_arg_name = h0_scale
builder.bind("h0_scale",constant_20);
auto constant_21 = builder.constant(); //  id = 35  node_arg_name = /decoder/rnn/Slice_12_output_0_zero_point
builder.bind("/decoder/rnn/Slice_12_output_0_zero_point",constant_21);
auto DequantizeLinear_6 = builder.node2("DequantizeLinear",{input_1,constant_20,constant_21}); //  id = 36  node_arg_name = /decoder/rnn/Slice_12_output_0_DequantizeLinear_Output
builder.bind("/decoder/rnn/Slice_12_output_0_DequantizeLinear_Output",DequantizeLinear_6);
auto input_2 = builder.wildcard(); //  id = 37  node_arg_name = /decoder/rnn/Slice_13_output_0_QuantizeLinear_Output
builder.bind("/decoder/rnn/Slice_13_output_0_QuantizeLinear_Output",input_2);
auto constant_22 = builder.constant(); //  id = 38  node_arg_name = c0_scale
builder.bind("c0_scale",constant_22);
auto constant_23 = builder.constant(); //  id = 39  node_arg_name = /decoder/rnn/Slice_13_output_0_zero_point
builder.bind("/decoder/rnn/Slice_13_output_0_zero_point",constant_23);
auto DequantizeLinear_7 = builder.node2("DequantizeLinear",{input_2,constant_22,constant_23}); //  id = 40  node_arg_name = /decoder/rnn/Slice_13_output_0_DequantizeLinear_Output
builder.bind("/decoder/rnn/Slice_13_output_0_DequantizeLinear_Output",DequantizeLinear_7);
auto constant_24 = builder.constant(); //  id = 41  node_arg_name = /decoder/rnn/Unsqueeze_output_0_quantized
builder.bind("/decoder/rnn/Unsqueeze_output_0_quantized",constant_24);
auto constant_25 = builder.constant(); //  id = 42  node_arg_name = /decoder/rnn/Unsqueeze_output_0_scale
builder.bind("/decoder/rnn/Unsqueeze_output_0_scale",constant_25);
auto constant_26 = builder.constant(); //  id = 43  node_arg_name = /decoder/rnn/Unsqueeze_output_0_zero_point
builder.bind("/decoder/rnn/Unsqueeze_output_0_zero_point",constant_26);
auto DequantizeLinear_8 = builder.node2("DequantizeLinear",{constant_24,constant_25,constant_26}); //  id = 44  node_arg_name = /decoder/rnn/Unsqueeze_output_0_DequantizeLinear_Output
builder.bind("/decoder/rnn/Unsqueeze_output_0_DequantizeLinear_Output",DequantizeLinear_8);
auto constant_27 = builder.constant(); //  id = 45  node_arg_name = /decoder/rnn/Unsqueeze_2_output_0_quantized
builder.bind("/decoder/rnn/Unsqueeze_2_output_0_quantized",constant_27);
auto constant_28 = builder.constant(); //  id = 46  node_arg_name = /decoder/rnn/Unsqueeze_2_output_0_scale
builder.bind("/decoder/rnn/Unsqueeze_2_output_0_scale",constant_28);
auto constant_29 = builder.constant(); //  id = 47  node_arg_name = /decoder/rnn/Unsqueeze_2_output_0_zero_point
builder.bind("/decoder/rnn/Unsqueeze_2_output_0_zero_point",constant_29);
auto DequantizeLinear_9 = builder.node2("DequantizeLinear",{constant_27,constant_28,constant_29}); //  id = 48  node_arg_name = /decoder/rnn/Unsqueeze_2_output_0_DequantizeLinear_Output
builder.bind("/decoder/rnn/Unsqueeze_2_output_0_DequantizeLinear_Output",DequantizeLinear_9);
auto constant_30 = builder.constant(); //  id = 49  node_arg_name = /decoder/rnn/Unsqueeze_1_output_0_quantized
builder.bind("/decoder/rnn/Unsqueeze_1_output_0_quantized",constant_30);
auto constant_31 = builder.constant(); //  id = 50  node_arg_name = /decoder/rnn/Unsqueeze_1_output_0_scale
builder.bind("/decoder/rnn/Unsqueeze_1_output_0_scale",constant_31);
auto constant_32 = builder.constant(); //  id = 51  node_arg_name = /decoder/rnn/Unsqueeze_1_output_0_zero_point
builder.bind("/decoder/rnn/Unsqueeze_1_output_0_zero_point",constant_32);
auto DequantizeLinear_10 = builder.node2("DequantizeLinear",{constant_30,constant_31,constant_32}); //  id = 52  node_arg_name = /decoder/rnn/Unsqueeze_1_output_0_DequantizeLinear_Output
builder.bind("/decoder/rnn/Unsqueeze_1_output_0_DequantizeLinear_Output",DequantizeLinear_10);
auto input_3 = builder.wildcard(); //  id = 53  node_arg_name = 
builder.bind("",input_3);
auto LSTM_0 = builder.node2("LSTM",{DequantizeLinear_5,DequantizeLinear_8,DequantizeLinear_10,DequantizeLinear_9,input_3,DequantizeLinear_6,DequantizeLinear_7}); //  id = 54  node_arg_name = /decoder/rnn/LSTM_output_0
builder.bind("/decoder/rnn/LSTM_output_0",LSTM_0);
auto constant_33 = builder.constant(); //  id = 55  node_arg_name = /decoder/rnn/LSTM_output_1_scale
builder.bind("/decoder/rnn/LSTM_output_1_scale",constant_33);
auto constant_34 = builder.constant(); //  id = 56  node_arg_name = /decoder/rnn/LSTM_output_0_zero_point
builder.bind("/decoder/rnn/LSTM_output_0_zero_point",constant_34);
auto QuantizeLinear_3 = builder.node2("QuantizeLinear",{LSTM_0,constant_33,constant_34}); //  id = 57  node_arg_name = /decoder/rnn/LSTM_output_0_QuantizeLinear_Output
builder.bind("/decoder/rnn/LSTM_output_0_QuantizeLinear_Output",QuantizeLinear_3);
auto constant_35 = builder.constant(); //  id = 58  node_arg_name = /decoder/rnn/LSTM_output_1_scale
builder.bind("/decoder/rnn/LSTM_output_1_scale",constant_35);
auto constant_36 = builder.constant(); //  id = 59  node_arg_name = /decoder/rnn/LSTM_output_0_zero_point
builder.bind("/decoder/rnn/LSTM_output_0_zero_point",constant_36);
auto DequantizeLinear_11 = builder.node2("DequantizeLinear",{QuantizeLinear_3,constant_35,constant_36}); //  id = 60  node_arg_name = /decoder/rnn/LSTM_output_0_DequantizeLinear_Output
builder.bind("/decoder/rnn/LSTM_output_0_DequantizeLinear_Output",DequantizeLinear_11);
auto constant_37 = builder.constant(); //  id = 61  node_arg_name = /decoder/rnn/Constant_38_output_0
builder.bind("/decoder/rnn/Constant_38_output_0",constant_37);
auto Squeeze_0 = builder.node2("Squeeze",{DequantizeLinear_11,constant_37}); //  id = 62  node_arg_name = /decoder/rnn/Squeeze_output_0
builder.bind("/decoder/rnn/Squeeze_output_0",Squeeze_0);
ret = Squeeze_0;
