/** generated by the following command:
env \
 IGNORE_CONSTANT=0 \
 ENABLE_CONSTNAT_SHARING=1 \
 $BUILD/vaip/onnxruntime_vitisai_ep/onnx_pattern_gen \
 -i encoder.pos_emb.pe_k.weight_DequantizeLinear_Output \
 -o /Transpose_6_output_0_QuantizeLinear_Output \
 -f norm_k_justb.onnx\
 -c norm_k_new.h.inc
*/
auto builder = vaip_core::PatternBuilder();
auto input_0 = builder.constant(); //  id = 0  node_arg_name = encoder.pos_emb.pe_k.weight_DequantizeLinear_Output
builder.bind("encoder.pos_emb.pe_k.weight_quantized",input_0);
auto constant_7 = builder.constant(); //  id = 11  node_arg_name = encoder.pos_emb.pe_k.weight_scale
builder.bind("encoder.pos_emb.pe_k.weight_scale",constant_7);
auto constant_8 = builder.constant(); //  id = 12  node_arg_name = encoder.pos_emb.pe_k.weight_zero_point
builder.bind("encoder.pos_emb.pe_k.weight_zero_point",constant_8);

auto constant_0 = builder.constant(); //  id = 0  node_arg_name = /norm_k/Constant_1_output_0_QuantizeLinear_Output
builder.bind("/norm_k/Constant_1_output_0_QuantizeLinear_Output",constant_0);
auto constant_1 = builder.wildcard(); //  id = 1  node_arg_name = /norm_k/Constant_1_output_0_scale
builder.bind("/norm_k/Constant_1_output_0_scale",constant_1);
auto constant_2 = builder.constant(); //  id = 2  node_arg_name = /norm_k/Constant_1_output_0_zero_point
builder.bind("/norm_k/Constant_1_output_0_zero_point",constant_2);
auto com_microsoft_DequantizeLinear_0 = builder.node2("com.microsoft:DequantizeLinear",{constant_0,constant_1,constant_2}); //  id = 3  node_arg_name = /norm_k/Constant_1_output_0_DequantizeLinear_Output
builder.bind("/norm_k/Constant_1_output_0_DequantizeLinear_Output",com_microsoft_DequantizeLinear_0);
auto constant_3 = builder.constant(); //  id = 4  node_arg_name = /norm_k/Constant_output_0_QuantizeLinear_Output
builder.bind("/norm_k/Constant_output_0_QuantizeLinear_Output",constant_3);
auto constant_4 = builder.constant(); //  id = 5  node_arg_name = /norm_k/Constant_output_0_scale
builder.bind("/norm_k/Constant_output_0_scale",constant_4);
auto constant_5 = builder.constant(); //  id = 6  node_arg_name = /norm_k/Constant_output_0_zero_point
builder.bind("/norm_k/Constant_output_0_zero_point",constant_5);
auto com_microsoft_DequantizeLinear_1 = builder.node2("com.microsoft:DequantizeLinear",{constant_3,constant_4,constant_5}); //  id = 7  node_arg_name = /norm_k/Constant_output_0_DequantizeLinear_Output
builder.bind("/norm_k/Constant_output_0_DequantizeLinear_Output",com_microsoft_DequantizeLinear_1);
// auto input_0 = builder.wildcard(); //  id = 8  node_arg_name = encoder.pos_emb.pe_k.weight_DequantizeLinear_Output
// builder.bind("encoder.pos_emb.pe_k.weight_DequantizeLinear_Output",input_0);



auto com_microsoft_DequantizeLinear_0_prev = builder.node2("com.microsoft:DequantizeLinear",{input_0,constant_7,constant_8}); //  id = 6  node_arg_name = /pos_emb/pe_k/Gather_output_0_DequantizeLinear_Output
builder.bind("encoder.pos_emb.pe_k.weight_DequantizeLinear_Output",com_microsoft_DequantizeLinear_0_prev);

auto constant_6 = builder.constant(); //  id = 9  node_arg_name = /pos_emb/Constant_output_0
builder.bind("/pos_emb/Constant_output_0",constant_6);
auto Gather_0 = builder.node2("Gather",{com_microsoft_DequantizeLinear_0_prev,constant_6}); //  id = 10  node_arg_name = /pos_emb/pe_k/Gather_output_0
builder.bind("/pos_emb/pe_k/Gather_output_0",Gather_0);

auto com_microsoft_QuantizeLinear_0 = builder.node2("com.microsoft:QuantizeLinear",{Gather_0,constant_7,constant_8}); //  id = 13  node_arg_name = /pos_emb/pe_k/Gather_output_0_QuantizeLinear_Output
builder.bind("/pos_emb/pe_k/Gather_output_0_QuantizeLinear_Output",com_microsoft_QuantizeLinear_0);
auto com_microsoft_DequantizeLinear_2 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_0,constant_7,constant_8}); //  id = 14  node_arg_name = /pos_emb/pe_k/Gather_output_0_DequantizeLinear_Output
builder.bind("/pos_emb/pe_k/Gather_output_0_DequantizeLinear_Output",com_microsoft_DequantizeLinear_2);
auto constant_9 = builder.constant(); //  id = 15  node_arg_name = 7379
builder.bind("7379",constant_9);
auto ReduceMean_0 = builder.node2("ReduceMean",{com_microsoft_DequantizeLinear_2,constant_9}); //  id = 16  node_arg_name = /norm_k/ReduceMean_output_0
builder.bind("/norm_k/ReduceMean_output_0",ReduceMean_0);
auto constant_10 = builder.constant(); //  id = 17  node_arg_name = /norm_k/ReduceMean_output_0_scale
builder.bind("/norm_k/ReduceMean_output_0_scale",constant_10);
auto constant_11 = builder.constant(); //  id = 18  node_arg_name = /norm_k/ReduceMean_output_0_zero_point
builder.bind("/norm_k/ReduceMean_output_0_zero_point",constant_11);
auto com_microsoft_QuantizeLinear_1 = builder.node2("com.microsoft:QuantizeLinear",{ReduceMean_0,constant_10,constant_11}); //  id = 19  node_arg_name = /norm_k/ReduceMean_output_0_QuantizeLinear_Output
builder.bind("/norm_k/ReduceMean_output_0_QuantizeLinear_Output",com_microsoft_QuantizeLinear_1);
auto com_microsoft_DequantizeLinear_3 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_1,constant_10,constant_11}); //  id = 20  node_arg_name = /norm_k/ReduceMean_output_0_DequantizeLinear_Output
builder.bind("/norm_k/ReduceMean_output_0_DequantizeLinear_Output",com_microsoft_DequantizeLinear_3);
auto com_microsoft_DequantizeLinear_4 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_0,constant_7,constant_8}); //  id = 21  node_arg_name = /pos_emb/pe_k/Gather_output_0_DequantizeLinear_Output/duplicated
builder.bind("/pos_emb/pe_k/Gather_output_0_DequantizeLinear_Output/duplicated",com_microsoft_DequantizeLinear_4);
auto Sub_0 = builder.node2("Sub",{com_microsoft_DequantizeLinear_4,com_microsoft_DequantizeLinear_3}); //  id = 22  node_arg_name = /norm_k/Sub_output_0
builder.bind("/norm_k/Sub_output_0",Sub_0);
auto constant_12 = builder.constant(); //  id = 23  node_arg_name = /norm_k/Sub_output_0_scale
builder.bind("/norm_k/Sub_output_0_scale",constant_12);
auto constant_13 = builder.constant(); //  id = 24  node_arg_name = /norm_k/Sub_output_0_zero_point
builder.bind("/norm_k/Sub_output_0_zero_point",constant_13);
auto com_microsoft_QuantizeLinear_2 = builder.node2("com.microsoft:QuantizeLinear",{Sub_0,constant_12,constant_13}); //  id = 25  node_arg_name = /norm_k/Sub_output_0_QuantizeLinear_Output
builder.bind("/norm_k/Sub_output_0_QuantizeLinear_Output",com_microsoft_QuantizeLinear_2);
auto com_microsoft_DequantizeLinear_5 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_2,constant_12,constant_13}); //  id = 26  node_arg_name = /norm_k/Sub_output_0_DequantizeLinear_Output
builder.bind("/norm_k/Sub_output_0_DequantizeLinear_Output",com_microsoft_DequantizeLinear_5);
auto Pow_0 = builder.node2("Pow",{com_microsoft_DequantizeLinear_5,com_microsoft_DequantizeLinear_1}); //  id = 27  node_arg_name = /norm_k/Pow_output_0
builder.bind("/norm_k/Pow_output_0",Pow_0);
auto constant_14 = builder.constant(); //  id = 28  node_arg_name = /norm_k/Pow_output_0_scale
builder.bind("/norm_k/Pow_output_0_scale",constant_14);
auto constant_15 = builder.constant(); //  id = 29  node_arg_name = /norm_k/Pow_output_0_zero_point
builder.bind("/norm_k/Pow_output_0_zero_point",constant_15);
auto com_microsoft_QuantizeLinear_3 = builder.node2("com.microsoft:QuantizeLinear",{Pow_0,constant_14,constant_15}); //  id = 30  node_arg_name = /norm_k/Pow_output_0_QuantizeLinear_Output
builder.bind("/norm_k/Pow_output_0_QuantizeLinear_Output",com_microsoft_QuantizeLinear_3);
auto com_microsoft_DequantizeLinear_6 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_3,constant_14,constant_15}); //  id = 31  node_arg_name = /norm_k/Pow_output_0_DequantizeLinear_Output
builder.bind("/norm_k/Pow_output_0_DequantizeLinear_Output",com_microsoft_DequantizeLinear_6);
auto ReduceMean_1 = builder.node2("ReduceMean",{com_microsoft_DequantizeLinear_6,constant_9}); //  id = 32  node_arg_name = /norm_k/ReduceMean_1_output_0
builder.bind("/norm_k/ReduceMean_1_output_0",ReduceMean_1);
auto constant_16 = builder.constant(); //  id = 33  node_arg_name = /norm_k/ReduceMean_1_output_0_scale
builder.bind("/norm_k/ReduceMean_1_output_0_scale",constant_16);
auto constant_17 = builder.constant(); //  id = 34  node_arg_name = /norm_k/ReduceMean_1_output_0_zero_point
builder.bind("/norm_k/ReduceMean_1_output_0_zero_point",constant_17);
auto com_microsoft_QuantizeLinear_4 = builder.node2("com.microsoft:QuantizeLinear",{ReduceMean_1,constant_16,constant_17}); //  id = 35  node_arg_name = /norm_k/ReduceMean_1_output_0_QuantizeLinear_Output
builder.bind("/norm_k/ReduceMean_1_output_0_QuantizeLinear_Output",com_microsoft_QuantizeLinear_4);
auto com_microsoft_DequantizeLinear_7 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_4,constant_16,constant_17}); //  id = 36  node_arg_name = /norm_k/ReduceMean_1_output_0_DequantizeLinear_Output
builder.bind("/norm_k/ReduceMean_1_output_0_DequantizeLinear_Output",com_microsoft_DequantizeLinear_7);
auto Add_0 = builder.node2("Add",{com_microsoft_DequantizeLinear_7,com_microsoft_DequantizeLinear_0}); //  id = 37  node_arg_name = /norm_k/Add_output_0
builder.bind("/norm_k/Add_output_0",Add_0);
auto constant_18 = builder.constant(); //  id = 38  node_arg_name = /norm_k/Add_output_0_scale
builder.bind("/norm_k/Add_output_0_scale",constant_18);
auto constant_19 = builder.constant(); //  id = 39  node_arg_name = /norm_k/Add_output_0_zero_point
builder.bind("/norm_k/Add_output_0_zero_point",constant_19);
auto com_microsoft_QuantizeLinear_5 = builder.node2("com.microsoft:QuantizeLinear",{Add_0,constant_18,constant_19}); //  id = 40  node_arg_name = /norm_k/Add_output_0_QuantizeLinear_Output
builder.bind("/norm_k/Add_output_0_QuantizeLinear_Output",com_microsoft_QuantizeLinear_5);
auto com_microsoft_DequantizeLinear_8 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_5,constant_18,constant_19}); //  id = 41  node_arg_name = /norm_k/Add_output_0_DequantizeLinear_Output
builder.bind("/norm_k/Add_output_0_DequantizeLinear_Output",com_microsoft_DequantizeLinear_8);
auto Sqrt_0 = builder.node2("Sqrt",{com_microsoft_DequantizeLinear_8}); //  id = 42  node_arg_name = /norm_k/Sqrt_output_0
builder.bind("/norm_k/Sqrt_output_0",Sqrt_0);
auto constant_20 = builder.constant(); //  id = 43  node_arg_name = /norm_k/Sqrt_output_0_scale
builder.bind("/norm_k/Sqrt_output_0_scale",constant_20);
auto constant_21 = builder.constant(); //  id = 44  node_arg_name = /norm_k/Sqrt_output_0_zero_point
builder.bind("/norm_k/Sqrt_output_0_zero_point",constant_21);
auto com_microsoft_QuantizeLinear_6 = builder.node2("com.microsoft:QuantizeLinear",{Sqrt_0,constant_20,constant_21}); //  id = 45  node_arg_name = /norm_k/Sqrt_output_0_QuantizeLinear_Output
builder.bind("/norm_k/Sqrt_output_0_QuantizeLinear_Output",com_microsoft_QuantizeLinear_6);
auto com_microsoft_DequantizeLinear_9 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_6,constant_20,constant_21}); //  id = 46  node_arg_name = /norm_k/Sqrt_output_0_DequantizeLinear_Output
builder.bind("/norm_k/Sqrt_output_0_DequantizeLinear_Output",com_microsoft_DequantizeLinear_9);
auto com_microsoft_DequantizeLinear_10 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_2,constant_12,constant_13}); //  id = 47  node_arg_name = /norm_k/Sub_output_0_DequantizeLinear_Output/duplicated
builder.bind("/norm_k/Sub_output_0_DequantizeLinear_Output/duplicated",com_microsoft_DequantizeLinear_10);
auto Div_0 = builder.node2("Div",{com_microsoft_DequantizeLinear_10,com_microsoft_DequantizeLinear_9}); //  id = 48  node_arg_name = /norm_k/Div_output_0
builder.bind("/norm_k/Div_output_0",Div_0);
auto constant_22 = builder.constant(); //  id = 49  node_arg_name = /norm_k/Div_output_0_scale
builder.bind("/norm_k/Div_output_0_scale",constant_22);
auto constant_23 = builder.constant(); //  id = 50  node_arg_name = /norm_k/Div_output_0_zero_point
builder.bind("/norm_k/Div_output_0_zero_point",constant_23);
auto com_microsoft_QuantizeLinear_7 = builder.node2("com.microsoft:QuantizeLinear",{Div_0,constant_22,constant_23}); //  id = 51  node_arg_name = /norm_k/Div_output_0_QuantizeLinear_Output
builder.bind("/norm_k/Div_output_0_QuantizeLinear_Output",com_microsoft_QuantizeLinear_7);
auto com_microsoft_DequantizeLinear_11 = builder.node2("com.microsoft:DequantizeLinear",{com_microsoft_QuantizeLinear_7,constant_22,constant_23}); //  id = 52  node_arg_name = /norm_k/Div_output_0_DequantizeLinear_Output
builder.bind("/norm_k/Div_output_0_DequantizeLinear_Output",com_microsoft_DequantizeLinear_11);
auto Transpose_0 = builder.node2("Transpose",{com_microsoft_DequantizeLinear_11}); //  id = 53  node_arg_name = /Transpose_6_output_0
builder.bind("/Transpose_6_output_0",Transpose_0);
auto com_microsoft_QuantizeLinear_8 = builder.node2("com.microsoft:QuantizeLinear",{Transpose_0,constant_22,constant_23}); //  id = 54  node_arg_name = /Transpose_6_output_0_QuantizeLinear_Output
builder.bind("/Transpose_6_output_0_QuantizeLinear_Output",com_microsoft_QuantizeLinear_8);
ret = com_microsoft_QuantizeLinear_8;
